// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type HubCreate = {
  name: string
  address: string
  latitude: number
  longitude: number
  host: string
  port: string
  sync_interval: number
  sync_size: number
  model: string
}

export type HubPublic = {
  name: string
  address: string
  latitude: number
  longitude: number
  host: string
  port: string
  sync_interval: number
  sync_size: number
  model: string
  id: string
  owner_id: string
}

export type HubsPublic = {
  data: Array<HubPublic>
  count: number
}

export type HubUpdate = {
  name?: string | null
  address?: string | null
  latitude: number | null
  longitude: number | null
  host: string | null
  port: string | null
  sync_interval: number | null
  sync_size: number | null
  model: string | null
}

export type ItemCreate = {
  date_created?: string
  date_stamped: string
  id_track: number
  id_cls: number
  is_out: boolean
  is_up: boolean
}

export type ItemPublic = {
  date_created?: string
  date_stamped: string
  id_track: number
  id_cls: number
  is_out: boolean
  is_up: boolean
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type SiteCreate = {
  name: string
  latitude: number
  longitude: number
  username: string
  password: string
  host: string
  port: string
  line_in: string
  line_out: string
  polygon: string
}

export type SitePublic = {
  name: string
  latitude: number
  longitude: number
  username: string
  password: string
  host: string
  port: string
  line_in: string
  line_out: string
  polygon: string
  id: string
  owner_id: string
}

export type SitesPublic = {
  data: Array<SitePublic>
  count: number
}

export type SiteUpdate = {
  name?: string | null
  latitude: number | null
  longitude: number | null
  username: string | null
  password: string | null
  host: string | null
  port: string | null
  line_in: string | null
  line_out: string | null
  polygon: string | null
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type HubsReadHubsData = {
  limit?: number
  skip?: number
}

export type HubsReadHubsResponse = HubsPublic

export type HubsCreateHubData = {
  requestBody: HubCreate
}

export type HubsCreateHubResponse = HubPublic

export type HubsDownloadModelResponse = HubsPublic

export type HubsReadHubData = {
  id: string
}

export type HubsReadHubResponse = HubPublic

export type HubsUpdateHubData = {
  id: string
  requestBody: HubUpdate
}

export type HubsUpdateHubResponse = HubPublic

export type HubsDeleteHubData = {
  id: string
}

export type HubsDeleteHubResponse = Message

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type ItemsPruneResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type SitesReadSitesData = {
  limit?: number
  skip?: number
}

export type SitesReadSitesResponse = SitesPublic

export type SitesCreateSiteData = {
  requestBody: SiteCreate
}

export type SitesCreateSiteResponse = SitePublic

export type SitesReadSiteData = {
  id: string
}

export type SitesReadSiteResponse = SitePublic

export type SitesUpdateSiteData = {
  id: string
  requestBody: SiteUpdate
}

export type SitesUpdateSiteResponse = SitePublic

export type SitesDeleteSiteData = {
  id: string
}

export type SitesDeleteSiteResponse = Message

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  id: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  id: string
  requestBody: UserUpdate
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  id: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean

export type VehiclesReadJobsResponse = unknown

export type VehiclesCreateJobData = {
  id: string
  verbose?: number
}

export type VehiclesCreateJobResponse = unknown

export type VehiclesDeleteJobData = {
  id: string
}

export type VehiclesDeleteJobResponse = Message
